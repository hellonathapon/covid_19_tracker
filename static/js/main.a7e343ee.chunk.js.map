{"version":3,"sources":["logo.svg","components/Header.js","assets/svg/arrow.svg","assets/svg/green-arrow.svg","assets/svg/virus.svg","assets/svg/defense.svg","assets/svg/grave.svg","components/Summary.js","components/LineChart.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","Logo","alt","Summary","todayData","console","log","Confirmed","Arrow","NewConfirmed","UpdateDate","Virus","Hospitalized","ArrowGreen","NewRecovered","Defense","Deaths","NewDeaths","Grave","LineChart","data","labels","datasets","label","borderColor","fill","cases","recovered","deaths","options","scales","xAxes","gridLines","display","yAxes","App","React","useState","setTodayData","setLabels","setCases","setRecovered","setDeaths","fetchApi","a","url","fetch","apiTodayData","json","jsonTodayData","apiTimelineData","jsonTimelineData","sliced10","Data","slice","Math","max","length","dataLabels","dataCases","dataRecovered","dataDeaths","forEach","item","push","Date","error","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7e343ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport Logo from '../logo.svg'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <figure>\r\n                <img className=\"App-logo\" src={Logo} alt=\"react logo\"/>\r\n            </figure>\r\n            <article>\r\n                <h1>Thailand COVID-19 Tracker</h1>\r\n                <p>Stay safe and keep yourself informed!</p>\r\n            </article>\r\n        </header>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/arrow.c56002cc.svg\";","export default __webpack_public_path__ + \"static/media/green-arrow.209fccea.svg\";","export default __webpack_public_path__ + \"static/media/virus.ed198736.svg\";","export default __webpack_public_path__ + \"static/media/defense.283c51d3.svg\";","export default __webpack_public_path__ + \"static/media/grave.8638d277.svg\";","import React from 'react'\r\nimport Arrow from '../assets/svg/arrow.svg'\r\nimport ArrowGreen from '../assets/svg/green-arrow.svg'\r\nimport Virus from '../assets/svg/virus.svg'\r\nimport Defense from '../assets/svg/defense.svg'\r\nimport Grave from '../assets/svg/grave.svg'\r\n\r\nexport default function Summary({ todayData }) {\r\n\r\n    console.log(todayData)\r\n    return (\r\n        <div className=\"summary\">\r\n            <div className=\"sum__card\">\r\n                <article>\r\n                    <p>TOTAL CASES</p>\r\n                    { todayData ? (<h4>{todayData.Confirmed}</h4>): (<p>no data!</p>) }\r\n                    <div className=\"sum__update\">\r\n                        <img src={Arrow} alt=\"arrow up\"/>\r\n                        { todayData ? (<span className=\"update-data\">{todayData.NewConfirmed}</span>): null }\r\n                        { todayData ? (<span>{todayData.UpdateDate}</span>): null }\r\n                    </div>\r\n                </article>\r\n                <figure><img className=\"icon\" src={Virus} alt=\"virus\"/></figure>\r\n            </div>\r\n            <div className=\"sum__card\">\r\n                <article>\r\n                    <p>TOTAL RECOVERED</p>\r\n                    { todayData ? (<h4>{todayData.Hospitalized}</h4>): (<p>no data!</p>) }\r\n                    <div className=\"sum__update\">\r\n                        <img src={ArrowGreen} alt=\"arrow up\"/>\r\n                        { todayData ? (<span className=\"update-data green\">{todayData.NewRecovered}</span>): null }\r\n                        { todayData ? (<span>{todayData.UpdateDate}</span>): null }\r\n                    </div>\r\n                </article>\r\n                <figure><img src={Defense} className=\"icon\" alt=\"cure icon\"/></figure>\r\n            </div>\r\n            <div className=\"sum__card\">\r\n                <article>\r\n                    <p>TOTAL DEATHS</p>\r\n                    { todayData ? (<h4>{todayData.Deaths}</h4>): (<p>no data!</p>) }\r\n                    <div className=\"sum__update\">\r\n                        <img src={Arrow} alt=\"arrow up\"/>\r\n                        { todayData ? (<span className=\"update-data\">{todayData.NewDeaths}</span>): null }\r\n                        { todayData ? (<span>{todayData.UpdateDate}</span>): null }\r\n                    </div>\r\n                </article>\r\n                <figure><img src={Grave} className=\"icon\" alt=\"wreath icon\"/></figure>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nexport default function LineChart({labels, cases, recovered, deaths}) {\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: 'Confirmed Cases',\r\n                borderColor: \"#3e95cd\",\r\n                fill: false,\r\n                data: cases,\r\n            },\r\n            {\r\n                label: 'Recovered',\r\n                borderColor: \"#16c3bb\",\r\n                fill: false,\r\n                data: recovered,\r\n            },\r\n            {\r\n                label: 'Deaths',\r\n                borderColor: \"#c45850\",\r\n                fill: false,\r\n                data: deaths,\r\n            },\r\n        ]\r\n    }\r\n    const options = {\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                    display:false\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    display:false\r\n                }   \r\n            }]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"line-chart\">\r\n            <Line className=\"chart\" data={data} options={options}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport { Header, Summary, LineChart } from './components'\n\nfunction App() {\n  let [todayData, setTodayData] = React.useState(null);\n  let [labels, setLabels] = React.useState([]);\n  let [cases, setCases] = React.useState([]);\n  let [recovered, setRecovered] = React.useState([]);\n  let [deaths, setDeaths] = React.useState([]);\n\n  const fetchApi = async () => {\n    const url = `https://covid19.th-stat.com/api/open/`\n    try{\n      const apiTodayData = await fetch(`${url}today`);\n      const jsonTodayData = await apiTodayData.json();\n      setTodayData(jsonTodayData);\n      const apiTimelineData = await fetch(`${url}timeline`);\n      const jsonTimelineData = await apiTimelineData.json();\n      const sliced10 = jsonTimelineData.Data.slice(Math.max(jsonTimelineData.Data.length - 30, 1));\n      console.log(sliced10)\n      let dataLabels = [];\n      let dataCases = [];\n      let dataRecovered = [];\n      let dataDeaths = [];\n      sliced10.forEach(item => {\n        dataLabels.push(item.Date)\n        dataCases.push(item.NewConfirmed)\n        dataRecovered.push(item.NewRecovered)\n        dataDeaths.push(item.NewDeaths)\n      });\n      setLabels(dataLabels);\n      setCases(dataCases);\n      setRecovered(dataRecovered)\n      setDeaths(dataDeaths);\n    }catch(err) {\n      \n      console.error(err)\n    }\n  }\n\n  React.useEffect(() => {\n    fetchApi();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"blue-bg\"></div>\n      <Header />\n      <Summary todayData={todayData} />\n      <LineChart labels={labels} cases={cases} recovered={recovered} deaths={deaths} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}